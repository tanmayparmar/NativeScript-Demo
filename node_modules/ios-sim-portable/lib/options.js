"use strict";
var yargs = require("yargs");
const _ = require("lodash");
class OptionType {
}
OptionType.String = "string";
OptionType.Boolean = "boolean";
var knownOptions = {
    "debug": { type: OptionType.Boolean },
    "exit": { type: OptionType.Boolean },
    "device": { type: OptionType.String },
    "stdout": { type: OptionType.String },
    "stderr": { type: OptionType.String },
    "env": { type: OptionType.String },
    "args": { type: OptionType.String },
    "timeout": { type: OptionType.String },
    "help": { type: OptionType.Boolean },
    "logging": { type: OptionType.Boolean },
    "waitForDebugger": { type: OptionType.Boolean },
    "sdkVersion": { type: OptionType.String },
    "sdk": { type: OptionType.String },
    "skipInstall": { type: OptionType.Boolean }
};
var parsed = {};
var argv = yargs(process.argv.slice(2)).options(knownOptions).argv;
_.each(_.keys(argv), optionName => {
    parsed[optionName] = argv[optionName];
});
module.exports = parsed;
