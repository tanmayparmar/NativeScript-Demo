{
  "_args": [
    [
      {
        "raw": "xcode@https://github.com/NativeScript/node-xcode/archive/1.4.0.tar.gz",
        "scope": null,
        "escapedName": "xcode",
        "name": "xcode",
        "rawSpec": "https://github.com/NativeScript/node-xcode/archive/1.4.0.tar.gz",
        "spec": "https://github.com/NativeScript/node-xcode/archive/1.4.0.tar.gz",
        "type": "remote"
      },
      "D:\\Demo\\demoApp\\demoApp\\node_modules\\nativescript"
    ]
  ],
  "_from": "https://github.com/NativeScript/node-xcode/archive/1.4.0.tar.gz",
  "_id": "xcode@0.8.0",
  "_inCache": true,
  "_location": "/nativescript/xcode",
  "_phantomChildren": {},
  "_requested": {
    "raw": "xcode@https://github.com/NativeScript/node-xcode/archive/1.4.0.tar.gz",
    "scope": null,
    "escapedName": "xcode",
    "name": "xcode",
    "rawSpec": "https://github.com/NativeScript/node-xcode/archive/1.4.0.tar.gz",
    "spec": "https://github.com/NativeScript/node-xcode/archive/1.4.0.tar.gz",
    "type": "remote"
  },
  "_requiredBy": [
    "/nativescript"
  ],
  "_resolved": "https://github.com/NativeScript/node-xcode/archive/1.4.0.tar.gz",
  "_shasum": "a70b3ebd82170b3864ef4c7d858cb779798e1e38",
  "_shrinkwrap": null,
  "_spec": "xcode@https://github.com/NativeScript/node-xcode/archive/1.4.0.tar.gz",
  "_where": "D:\\Demo\\demoApp\\demoApp\\node_modules\\nativescript",
  "author": {
    "name": "Andrew Lunny",
    "email": "alunny@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/alunny/node-xcode/issues"
  },
  "contributors": [
    {
      "name": "Andrew Lunny",
      "url": "@alunny"
    },
    {
      "name": "Anis Kadri",
      "url": "@imhotep"
    },
    {
      "name": "Mike Reinstein",
      "url": "@mreinstein"
    },
    {
      "name": "Filip Maj",
      "url": "@filmaj"
    },
    {
      "name": "Brett Rudd",
      "url": "@goya"
    },
    {
      "name": "Bob Easterday",
      "url": "@bobeast"
    }
  ],
  "dependencies": {
    "node-uuid": "1.3.3",
    "pegjs": "0.6.2"
  },
  "description": "parser for xcodeproj/project.pbxproj files",
  "devDependencies": {
    "nodeunit": "0.9.0"
  },
  "engines": {
    "node": ">=0.6.7"
  },
  "homepage": "https://github.com/alunny/node-xcode#readme",
  "main": "index.js",
  "name": "xcode",
  "optionalDependencies": {},
  "readme": "# node-xcode\n\n> parser/toolkit for xcodeproj project files\n\nAllows you to edit xcodeproject files and write them back out.\n\n## Example\n\n    // API is a bit wonky right now\n    var xcode = require('xcode'),\n        fs = require('fs'),\n        projectPath = 'myproject.xcodeproj/project.pbxproj',\n        myProj = xcode.project(projectPath);\n\n    // parsing is async, in a different process\n    myProj.parse(function (err) {\n        myProj.addHeaderFile('foo.h');\n        myProj.addSourceFile('foo.m');\n        myProj.addFramework('FooKit.framework');\n        \n        fs.writeFileSync(projectPath, myProj.writeSync());\n        console.log('new project written');\n    });\n\n## Working on the parser\n\nIf there's a problem parsing, you will want to edit the grammar under\n`lib/parser/pbxproj.pegjs`. You can test it online with the PEGjs online thingy\nat http://pegjs.majda.cz/online - I have had some mixed results though.\n\nTests under the `test/parser` directory will compile the parser from the\ngrammar. Other tests will use the prebuilt parser (`lib/parser/pbxproj.js`).\n\nTo rebuild the parser js file after editing the grammar, run:\n\n    ./node_modules/.bin/pegjs lib/parser/pbxproj.pegjs\n\n(easier if `./node_modules/.bin` is in your path)\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "url": "git+https://github.com/alunny/node-xcode.git"
  },
  "scripts": {
    "test": "nodeunit test/parser test"
  },
  "version": "0.8.0"
}
