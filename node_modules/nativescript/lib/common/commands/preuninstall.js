"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments)).next());
    });
};
const path = require("path");
class PreUninstallCommand {
    constructor($fs, $options) {
        this.$fs = $fs;
        this.$options = $options;
        this.disableAnalytics = true;
        this.allowedParameters = [];
    }
    execute(args) {
        return __awaiter(this, void 0, void 0, function* () {
            this.$fs.deleteFile(path.join(this.$options.profileDir, "KillSwitches", "cli"));
        });
    }
}
exports.PreUninstallCommand = PreUninstallCommand;
$injector.registerCommand("dev-preuninstall", PreUninstallCommand);
